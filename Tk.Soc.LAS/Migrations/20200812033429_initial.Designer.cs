// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tk.Soc.LAS;

namespace Tk.Soc.LAS.Migrations
{
    [DbContext(typeof(TkSocLASDbContext))]
    [Migration("20200812033429_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Tk.Soc.LAS.Models.t_svr_proc_all_history_bak", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("asset_id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte?>("cpu_wait_proc_num")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("files_open_num")
                        .HasColumnType("int");

                    b.Property<int?>("pid")
                        .HasColumnType("int");

                    b.Property<string>("proc_cmd")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float?>("proc_cpu")
                        .HasColumnType("float");

                    b.Property<long?>("proc_mem")
                        .HasColumnType("bigint");

                    b.Property<string>("proc_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("proc_param")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("proc_start_time")
                        .HasColumnType("datetime(6)");

                    b.Property<byte?>("proc_status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("proc_user")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("sample_time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("t_svr_proc_all_history_bak");
                });
#pragma warning restore 612, 618
        }
    }
}
